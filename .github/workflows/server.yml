name: Server

on:
  push:
    branches: [main]
    paths: "server/**"
  pull_request:
    branches: [main]
    paths: "server/**"
  workflow_dispatch:

jobs:
  ci:
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.10"]
        poetry-version: ["1.1.15"]
        os: [ubuntu-latest]
    runs-on: ${{ matrix.os }}
    defaults:
      run:
        working-directory: server
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Run image
        uses: abatilo/actions-poetry@v2
        with:
          poetry-version: ${{ matrix.poetry-version }}

      - name: Setup FreeCAD
        run: |
          mkdir $PWD/freecad
          cd $PWD/freecad
          wget -O freecad.AppImage https://github.com$(curl -v --silent https://github.com/FreeCAD/FreeCAD-Bundle/releases/expanded_assets/weekly-builds 2>&1 | sed -n 's/.*href="\([^"]*\).*/\1/p' | grep x86_64 | grep AppImage$)
          chmod +x freecad.AppImage
          ./freecad.AppImage --appimage-extract > /dev/null 
          export PYTHONPATH=.:$PWD/../src:$PWD/squashfs-root/usr/lib:$PWD/squashfs-root/usr/Mod/Path:$PWD/squashfs-root/usr/lib/python3.10/site-packages/
          echo "PYTHONPATH=$PYTHONPATH" >> $GITHUB_ENV

      - name: Test FreeCAD is available
        run: |
          echo $PYTHONPATH
          python -c "import sys; print(sys.path)"
          python -c "import FreeCAD"

      - name: Install the project dependencies
        run: poetry install

      - name: Lint with ruff
        run: |
          # stop the build if there are Python syntax errors or undefined names
          poetry run ruff --format=github --select=E9,F63,F7,F82 --target-version=py37 .
          # default set of ruff rules with GitHub Annotations
          poetry run ruff --format=github --target-version=py37 .

      - name: Run the automated tests
        run: poetry run pytest -v